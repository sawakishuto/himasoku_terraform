name: "Terraform Infrastructure"

on:
  push:
    branches: ["main"]
    paths:
      - "terraform/**"
      - ".github/workflows/terraform.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "terraform/**"

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    # デフォルトのシェル設定
    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
      # リポジトリのチェックアウト
      - name: Checkout
        uses: actions/checkout@v4

      # Google Cloud認証
      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      # Google Cloud SDKのセットアップ
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      # Terraformのセットアップ
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      # Terraformの初期化
      - name: Terraform Init
        run: terraform init

      # Terraformの検証
      - name: Terraform Validate
        run: terraform validate

      # Terraformフォーマットチェック
      - name: Terraform Format
        run: terraform fmt -check

      # Terraformプラン（PRの場合）
      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      # プラン結果をPRにコメント
      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # Terraformアプライ（mainブランチの場合）
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
